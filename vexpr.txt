●概要
    変数操作の対象およびオペランドの項目として追加予定の「式」についての説明です
    
    入力はテキスト形式でおこなわれますが、エディタでテキストをバイトコードに変換してから保持します
    そのため入力内容は常に整形されています
    定数畳み込みなどの最適化はありません
    
    評価は　対象変数の式→オペランドの式　の順です
    変数操作コマンドの仕様上、
    対象が範囲の場合はそれぞれへの操作に対してオペランドが毎回評価されるため注意が必要です
    ※式中では範囲対象に代入の際も右辺評価は1度だけです
    
    ほかで代用可能な式は専用のオペランドのほうが高速です
    例えば「v[1] = a + b」なら二項演算の「add(a, b)」に置き換えたほうが良い結果を得られます

    
●数値
    10進数または16進数(接頭辞0x)表記が可能です
    桁の区切りとしてアンダーバーが使用できますが、この情報は保存されません
    値の有効範囲はマニアクスでの変数値と同じ -2147483648～2147483647 です
    範囲外の定数値は解析時にチェックされません(100000000000などはオーバーフローします)

    (例)
    0, 123, 0xFFFF_FFFF

    

●スイッチ
    「s[番号]」でスイッチをあらわします
    番号は左辺値の場合に限り範囲オブジェクト(a..b)での指定が可能です
    スイッチの評価は偽(OFF)が0、真(ON)は1になります
    スイッチへの代入は0が偽(OFF)、それ以外は真(ON)になります
    
    
    
●変数
    「v[番号]」でスイッチをあらわします
    番号は左辺値の場合に限り範囲オブジェクト(a..b)での指定が可能です



●演算
    2003標準と同じく飽和演算です
    &&や||は短絡評価です
    数値が求められる場面での範囲オブジェクト(a..b)の評価は未定義です


・単項演算
    符号反転(-)
    否定(!)
    ビット反転(~)


・二項演算
    代入(=)
    加算(+)
    減算(-)
    乗算(*)
    除算(/)
    剰余(%)
    論理和(|)
    論理積(&)
    排他的論理和(^)
    論理左シフト(<<)
    論理右シフト(>>)
    ～と同じ(==)
    ～より大きい(>)
    ～より小さい(<)
    ～以上(>=)
    ～以下(<=)
    ～以外(!=)
    aまたはb(||)
    aかつb(&&)
    aからb(..)
    
    
・三項演算
    条件 ? 真の場合 : 偽の場合
    

・優先順位(上から高い順)
    括弧, 単項演算
    乗算(*), 除算(/), 剰余(%)
    加算(+), 減算(-)
    論理左シフト(<<), 論理右シフト(>>)
    ～より大きい(>), ～より小さい(<), ～以上(>=), ～以下(<=)
    ～と同じ(==), ～以外(!=)
    論理積(&)
    排他的論理和(^)
    論理和(|)
    aかつb(&&)
    aまたはb(||)
    aからb(..)
    三項演算
    代入(=)
  
  
    
●組み込み関数

・rnd(a, b)
    変数操作オペランドの「乱数」と同じです
    aからbの範囲内の乱数を返します


・item(id, type)
    変数操作オペランドの「アイテム」と同じです
    アイテム[id]のtypeを返します


・actor(id, type)
    変数操作オペランドの「主人公」と同じです
    主人公[id]のtypeを返します


・member(idx, type)
    変数操作オペランドの「パーティメンバー」と同じです
    メンバー[idx]のtypeを返します


・event(id, type)
    変数操作オペランドの「イベント」と同じです
    イベント[id]のtypeを返します


・enemy(idx, type)
    変数操作オペランドの「敵キャラ」と同じです
    敵キャラ[idx]のtypeを返します


・misc(type)
    変数操作オペランドの「その他」と同じです
    typeの情報を返します

    ※オペランドの並び順とtypeの値は一致しないことに注意してください


・pow(a, b)
・min(a, b)
・max(a, b)
・abs(a)
    変数操作オペランドの「数学関数」のものと同じです


・sqrt(a, b)
    変数操作オペランドの「数学関数」のものとほぼ同じです
    bは乗数です


・sin(a, b, c)
・cos(a, b, c)
・atan2(a, b, c)
    変数操作オペランドの「数学関数」のものとほぼ同じです
    cは乗数です

    
・between(a, b, c)
    aをb～cの範囲で丸めたものを返します
    min(max(a, b), c)と同じです


・muldiv(a, b, c)
    「a * b / c」を符号付き64bit整数で計算し、符号付き32bit整数にして返します

    
・divmul(a, b, c)
    「a / b * c」を倍精度小数で計算し、符号付き32bit整数にして返します




